type Mutation {
    #Update doctor's personal information
    updateDoctorInfo(id: ID!, input: DocInput!): Doc!

    #Creat a new doctor using the DocInput type
    createNewDoctor(input: DocInput!): Doc!

    #Create a brand new patient for the practice
    createNewPatient(input: PatientInput!): Patient!

    #Assign a new doc to the patient
    addDoctorToPatient(patientId: ID!, docId: ID!): Patient!

    #Schedule a new appointment for a patient and a doctor
    createNewAppointment(input: AppointmentInput): Appointment!

    #Update an appointment (ie. reschedule, cancel, update based on doctor's prognosis, etc)
    updateAppointment(id: ID!, input: AppointmentInput!): Appointment!

    #remove doctor info from the practice
    removeDoctor(id: ID): String!
}

type Query {
    # going to do a nice
    # use async operation for this
    # retrieve a patient's information including their insurance info
    retrieveAllPatientInfo(id: ID): AllPatientInfo!

    #Retrieve all doctors/practitioners at the practice
    retrieveAllDoctors: [Doc!]

    #Retrieve specific doctor/practitioner by their ID
    retrieveDoctorById(id: ID): Doc

    #Retrieve all patients at the practice
    retrievePatientsInfo: [Patient!]

    #Retrieve specific patient's information
    retrievePatientInfoById(id: ID): Patient

    #Retrieve all appointments
    retrieveAllAppointments(skip: Int = 0, first: Int = 0): [Appointment!]

    #Retrieve appointmet by its ID
    retrieveAppointmentById(id: ID): Appointment

    #Retrieve appointments by its status (enum type)
    retrieveAppointmentByStatus(status: AppointmentStatus!): [Appointment]

    #Retrieve appointments by patient id. If appointment status is null, retrieve all appointments
    retrievePatientsAppointments(patientId: ID!, status: AppointmentStatus): [Appointment]

    #Retrieve appointments by doctor id. If appointment status is null, retrieve all appointments
    retrieveDoctorsAppointments(docId: ID!, status: AppointmentStatus): [Appointment]
}

